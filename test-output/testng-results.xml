<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-04T15:15:46 IST" name="Default suite" finished-at="2023-09-04T15:16:04 IST" duration-ms="18312">
    <groups>
    </groups>
    <test started-at="2023-09-04T15:15:46 IST" name="Default test" finished-at="2023-09-04T15:16:04 IST" duration-ms="18312">
      <class name="LoginTest.LoginTest1">
        <test-method is-config="true" signature="OpenBrowser()[pri:0, instance:LoginTest.LoginTest1@1b11171f]" started-at="2023-09-04T15:15:46 IST" name="OpenBrowser" finished-at="2023-09-04T15:15:52 IST" duration-ms="6437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method is-config="true" signature="login()[pri:0, instance:LoginTest.LoginTest1@1b11171f]" started-at="2023-09-04T15:15:52 IST" name="login" finished-at="2023-09-04T15:16:00 IST" duration-ms="8241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="verifyname()[pri:0, instance:LoginTest.LoginTest1@1b11171f]" started-at="2023-09-04T15:16:00 IST" name="verifyname" finished-at="2023-09-04T15:16:03 IST" duration-ms="3105" status="FAIL">
          <exception class="java.io.IOException">
            <message>
              <![CDATA[Your InputStream was neither an OLE2 stream, nor an OOXML stream or you haven't provide the poi-ooxml*.jar in the classpath/modulepath - FileMagic: OOXML, having providers: [org.apache.poi.hssf.usermodel.HSSFWorkbookFactory@5cb042da]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: Your InputStream was neither an OLE2 stream, nor an OOXML stream or you haven't provide the poi-ooxml*.jar in the classpath/modulepath - FileMagic: OOXML, having providers: [org.apache.poi.hssf.usermodel.HSSFWorkbookFactory@5cb042da]
at org.apache.poi.ss.usermodel.WorkbookFactory.wp(WorkbookFactory.java:309)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:208)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:172)
at libraryFiles.UtilityClass.getTestData(UtilityClass.java:27)
at LoginTest.LoginTest1.verifyname(LoginTest1.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyname -->
        <test-method is-config="true" signature="name(org.testng.ITestResult)[pri:0, instance:LoginTest.LoginTest1@1b11171f]" started-at="2023-09-04T15:16:03 IST" name="name" finished-at="2023-09-04T15:16:04 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyname status=FAILURE method=LoginTest1.verifyname()[pri:0, instance:LoginTest.LoginTest1@1b11171f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- name -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:LoginTest.LoginTest1@1b11171f]" started-at="2023-09-04T15:16:04 IST" name="closebrowser" finished-at="2023-09-04T15:16:04 IST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- LoginTest.LoginTest1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
